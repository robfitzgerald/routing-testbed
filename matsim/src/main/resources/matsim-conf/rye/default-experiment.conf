io {
  matsim-network-file = "/Users/robertfitzgerald/dev/ucd/phd/projects/2019su/SOTestbed/matsim/src/main/resources/matsim/network/rye-network.xml"
  population-file = "/Users/robertfitzgerald/dev/ucd/phd/projects/2019su/SOTestbed/matsim/src/main/resources/matsim/population/rye/rye-population.xml"
  matsim-config-file = "/Users/robertfitzgerald/dev/ucd/phd/projects/2019su/SOTestbed/matsim/src/main/resources/matsim/config/matsim-config.xml"
  name = "matsim-rye"
  matsim-log-level = "DEBUG"
}

run {
  last-iteration = 10
  so-routing-iteration-cycle: 5
  start-of-sim-time = 0
  end-of-sim-time = 86400
  end-of-routing-time = 86399
  matsim-step-size = 1.0
  simulation-tail-timeout = "60 minutes"
}

routing {
  network-flow-capture-buffer = 600 # 5 minutes todo: what is this? is this how often the road network updates?
  k = 3 # todo: why not in algorithm section, below?
  batch-window = 5
  max-path-assignments = 2 # > 1 for dynamic replanning
  reasonable-replanning-lead-time = 60 # seconds into the future of this agent's path
  minimum-replanning-wait-time = 60 # seconds between replanning attempts
  minimum-remaining-route-time-for-replanning = 60 # seconds travel estimated remaining to consider replanning
  request-update-cycle = 5 # how often to update Request information for replan-able agents (which will incur some cost to compute)
  theta = 0.5 # similarity-dissimilarity requirement for kSPwLO algorithm - toDO: why not in algorithm section, below?
}

algorithm {
  path-to-marginal-flows-function = {
    type = "decay"
    rate = 1.0 # no decay
  }
  combine-flows-function = "sum"
  marginal-cost-function = {
    type = edge-bpr
    alpha = 0.15
    beta = 4.0
  }
  ksp-termination-function = {
    type = "paths-seen"
    seen = 15
  }
  selection-termination-function = {
    type = "time"
    duration-ms = 1000
  }
  batching-function = {
    type = "greedy"
    batch-window = ${routing.batch-window}
    minimum-replanning-wait-time = ${routing.minimum-replanning-wait-time}
  }
}