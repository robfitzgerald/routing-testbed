include required("../default.conf")

algorithm {
  type = system-optimal
  name = "od_svp_localmcts"

  ksp-algorithm = {
    type = svp-lo-sync
    k = 10
    theta = 0.5
    min-batch-size =${routing.min-batch-size}
    ksp-termination-function = {
      type = paths-seen-scalar
      scalar = 10
      k = ${algorithm.ksp-algorithm.k}
    }
  }

  use-free-flow-network-costs-in-path-search = true # / "false" uses current network conditions

  selection-algorithm = {
    type = local-mcts-selection
    seed = 0
    exhaustive-search-sample-limit = 20000       # when a problem size is smaller than x combinations, run exhaustive search instead of optimization
    minimum-average-batch-travel-improvement = 0 # the number of seconds, on average, that agents in a batch should have estimated improved travel time to allow replanning (positive number)
    selection-termination-function = {
      type = compute-budget
      duration-ms = 3000
    }
  }

//  batching-function = {
//    type = greedy
//    batch-window = ${routing.batch-window}
//    minimum-replanning-wait-time = ${routing.minimum-replanning-wait-time}
//    max-batch-size = 10
//  }
  batching-function {
    type = "coordinate-grid-grouping"
    batch-window = ${routing.batch-window}
    minimum-replanning-wait-time = ${routing.minimum-replanning-wait-time}
    max-batch-size = 999999 // no limit to batch size
    //    min-batch-size
    //    max-batch-size
    //    min-x
    //    max-x
    //    min-y
    //    max-y
    batch-type = "c"
    grid-cell-side-length = 500 // 0.5km square sides
    srid = 3857 // Web Mercator
    batch-path-time-delay = 0 // how far in agent's future to find their position in grid
  }
}