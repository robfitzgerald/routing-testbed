io {
  matsim-network-file = "/Users/robertfitzgerald/dev/ucd/phd/projects/2019su/SOTestbed/matsim/src/main/resources/matsim/network/test-network/five-by-five-network.xml"
  population-file = "/Users/robertfitzgerald/dev/ucd/phd/projects/2019su/SOTestbed/matsim/src/main/resources/matsim/population/5x5/five-by-five-population.xml"
  matsim-config-file = "/Users/robertfitzgerald/dev/ucd/phd/projects/2019su/SOTestbed/matsim/src/main/resources/matsim/config/matsim-config.xml"
  matsim-log-level = "DEBUG"
}

run {
  last-iteration = 0
  so-routing-iteration-cycle = 0
  so-first-iteration: true
  start-of-sim-time = 0
  end-of-sim-time = 86400
  end-of-routing-time = 86399
  matsim-step-size = 1.0
  matsim-semaphore-timeout-ms = 1000
  simulation-tail-timeout = "1 second"
}

routing {
  batch-window = 15
  max-path-assignments = 20 # > 1 for dynamic replanning
  reasonable-replanning-lead-time = 60 # seconds into the future of this agent's path
  minimum-replanning-wait-time = 60 # seconds between replanning attempts
  minimum-remaining-route-time-for-replanning = 60 # seconds travel estimated remaining to consider replanning
  request-update-cycle = 15 # how often to update Request information for replan-able agents (which will incur some cost to compute)
}

algorithm {
  type = system-optimal
  name = "coordinate_svp_localmcts"

  ksp-algorithm = {
    type = svp-lo-sync
    k = 10
    theta = 0.5
    ksp-termination-function = {
      type = paths-seen
      seen = 30
    }
  }

  //  selection-algorithm = {
  //    type = random-sampling-selection
  //    seed = 0
  //    selection-termination-function = {
  //      type = compute-budget
  //      duration-ms = 1000
  //    }
  //  }

  selection-algorithm = {
    type = local-mcts-selection
    seed = 0
    selection-termination-function = {
      type = compute-budget
      duration-ms = 1000
    }
  }

  //  batching-function = {
  //    type = greedy
  //    batch-window = ${routing.batch-window}
  //    minimum-replanning-wait-time = ${routing.minimum-replanning-wait-time}
  //    max-batch-size = 10
  //  }

  batching-function {
    type = "greedy-coordinate-grid"
    batch-window = ${routing.batch-window}
    minimum-replanning-wait-time = ${routing.minimum-replanning-wait-time}
    max-batch-size = 10
    min-x = -11709813.1201
    max-x = -11701295.9991 #  8517.121 x-range
    min-y = 4859355.6639
    max-y = 4870953.9105   # 11598.247 y-range
    split-factor = 4
    batch-path-time-delay = 0 // how far in agent's future to find their position in grid
  }

  //  path-to-marginal-flows-function = {
  //    type = link-decay
  //    rate = 1.0 # no decay
  //  }

  path-to-marginal-flows-function.type = default
  combine-flows-function.type = sum

  marginal-cost-function = {
    type = edge-bpr
    alpha = 0.15
    beta = 4.0
  }
}