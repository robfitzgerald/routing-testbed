scenarioBasePath = "/Users/robertfitzgerald/dev/ucd/phd/projects/2019su/SOTestbed/matsim/src/main/resources"
//io.output-base-directory = "/Volumes/bingo_bingo/UCDenver/20200630-test-logging"
io.output-base-directory = "/Users/robertfitzgerald/dev/ucd/phd/projects/2020sp/so-testbed-results"
//io.routing-report-config.type = inactive
io.routing-report-config.type = aggregate-data

routing.adoption-rate = 0.5
algorithm.batching-function.max-batch-size = [10000]
algorithm.batching-function.split-factor = [5]
algorithm.ksp-algorithm.k = 10
algorithm.name = ["od_svp_localmcts", "selfish"]
routing.batch-window = [30]
algorithm.batching-function.batch-type = ["c"]
pop.size = [6000]
routing.max-path-assignments = [1440]
//use-free-flow-network-costs-in-path-search = false

//algorithm.selection-algorithm.selection-termination-function = {
//  type = compute-budget
//  duration-ms = 2000
//}

//algorithm.selection-algorithm = {
//  type = tsp-selection
//}

algorithm.selection-algorithm = {
  type = random-sampling-selection

  seed = 0
  exhaustive-search-sample-limit = 1

  selection-termination-function = {
    type = percent-explored-with-compute-budget
    target-search-space-exploration-ratio = 1.0
    duration-ms = 5000
  }

  selection-acceptance-function = {
    type = dismiss-complete-searches
  }
}



//algorithm.selection-algorithm.type = tsp-selection // just allows all SO agents to just be selfishly replanned

// block improvements that are so low that they may be dis-improvements due to the error between BPR and MATSim's fundimental diagram
// setting this greater than 0 also prevents replanning agents with selfish plans
// (when SO == UE and improvement is 0, selfish is *the best choice* to make at this time - but, what about making *no choice* and
// sending *no route* when this is the case? that will happen when min avg improvement > 0.0)
//routing.minimum-average-improvement = [0]
//routing.minimum-average-improvement = [0.000001]


//routing.min-request-update-threshold = [10]                                    # how much time should elapse between updates to Request information for replan-able agents (which will incur some cost to compute)
//routing.min-network-update-threshold = [600]                                       # how much time should elapse between updates to the network state
